from config import Bot, F, Router, FSInputFile, types, FSMContext, State, bot, CallbackData, file_config, json, FSInputFile, time
from markups.adminmarkup import *
import filters.filtersbot as filtersbot
from sql_function import databasework
from datetime import timedelta
from markups.markup import menu
import datetime
import filters.filtersbot as filtersbot
import aiocron
import random
import asyncio
from states.adminstates import MailingState
import threading
import os
import requests
import re
import logging
    
router = Router()

router.message.filter(filtersbot.AdminCheck()) # –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –∫ —Ä–æ—É—Ç–µ—Ä—É
router.callback_query.filter(filtersbot.AdminCheck()) # –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –∫ —Ä–æ—É—Ç–µ—Ä—É


# –Ω–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é
@router.callback_query(F.data == 'main_admin')
async def admin_menu(callback: types.CallbackQuery, state: FSMContext):
    await state.clear()
    markup = admin_markup()
    count_users = await databasework.get_count_users()
    await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=f'üíé –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n\n‚öôÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ - {count_users}', reply_markup=markup)


# –∞–¥–º–∏–Ω–∫–∞
@router.message(F.text == '/admin')
async def start(message: types.Message, state: FSMContext):
    #photo = FSInputFile('kwork8/photo/start_message.jpg')
    await state.clear()
    markup = admin_markup()
    count_users = await databasework.get_count_users()
    await message.answer(f'üíé –í—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n\n‚öôÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ - {count_users}', reply_markup=markup)
    
    
# —Ä–∞—Å—Å—ã–ª–∫–∞
@router.callback_query(F.data == 'mailing')
async def mailing(callback: types.CallbackQuery, state: FSMContext):
    markup = main_admin()
    await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=f'üíé –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=markup)
    await state.set_state(MailingState.one)
    
# —Ä–∞—Å—Å—ã–ª–∞–µ–º
@router.message(MailingState.one)
async def send_msg_mailing(message: types.Message, state: FSMContext):
    users = await databasework.get_all_status_user()
    
    success = 0
    error = 0
    
    for user in users:
        try:
            await bot.copy_message(from_chat_id=message.chat.id, chat_id=user[1], message_id=message.message_id)
            await asyncio.sleep(0.2)
            success += 1
        except:
            error += 1
            
            
    markup = main_admin()
    await message.answer(f'üíé –†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - {success}\n–û—à–∏–±–æ–∫ - {error}', reply_markup=markup)
    await state.clear()
    
admin = router
